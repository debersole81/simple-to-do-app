{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","alert","this","props","todo","completed","id","title","className","type","checked","onChange","handleChange","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","React","Component","TodosList","todos","map","Header","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoItem","onSubmit","placeholder","TodoContainer","show","delTodo","axios","delete","then","response","filter","post","data","get","foo","headerSpan","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26efe4a9.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nclass TodoItem extends React.Component {\r\n    \r\n    //Alert the user that a todo item is about to be deleted\r\n    componentWillUnmount() {\r\n        alert(\"Item about to be deleted!\");\r\n    }\r\n\r\n    render() {\r\n       //Custom style for completed todos\r\n        const completedStyle = {\r\n            fontStyle: \"italic\",\r\n            color: \"#d35e0f\",\r\n            opacity: 0.4,\r\n            textDecoration: \"line-through\",\r\n        }\r\n\r\n        //Destructure todo props\r\n        const {completed, id, title} = this.props.todo\r\n\r\n        return( \r\n        <li className=\"todo-item\">\r\n            <input \r\n                type=\"checkbox\"\r\n                checked={completed}\r\n                onChange={() => this.props.handleChange(id)}\r\n            /> \r\n            <button onClick={() => this.props.deleteTodoProps(id)}> \r\n                Delete\r\n            </button> \r\n            <span style={completed ? completedStyle : null}>{title}</span>\r\n        </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoItem","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\"\r\n\r\nclass TodosList extends React.Component {  \r\n    render() {\r\n        \r\n        return (\r\n            //map through todo props and pass to TodoItem component\r\n            <div>\r\n               {this.props.todos.map(todo => (\r\n                   <TodoItem \r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        handleChange={this.props.handleChange}\r\n                        deleteTodoProps={this.props.deleteTodoProps}\r\n                    />\r\n               ))}\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default TodosList","import React, { Component } from \"react\"\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n      const headerStyle = {\r\n        padding: \"20px 0\",\r\n        lineHeight: \"2em\",\r\n      }\r\n      return (\r\n        <header style={headerStyle}>\r\n          <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n            Simple Todo App <span id=\"inH1\"></span>\r\n          </h1>\r\n          <p style={{ fontSize: \"19px\" }}>\r\n            Please add to-dos item(s) through the input field\r\n          </p>\r\n        </header>\r\n      )\r\n    }\r\n  }\r\n         \r\nexport default Header","import React from \"react\"\r\n\r\nclass InputTodo extends React.Component {\r\nstate = {\r\n    title: \"\"\r\n};\r\n\r\nonChange = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    });\r\n};\r\n\r\nhandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodoItem(this.state.title);\r\n    this.setState({\r\n        title:\"\"\r\n    })\r\n};\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"input-text\" \r\n                    placeholder=\"Add Todo...\" \r\n                    value={this.state.title}\r\n                    name=\"title\"\r\n                    onChange={this.onChange}\r\n                /> \r\n                <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n            </form>\r\n        )\r\n    }          \r\n}\r\n\r\nexport default InputTodo","import React from \"react\"\r\nimport TodosList from \"./TodosList\"\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport axios from \"axios\"\r\n\r\n\r\nclass TodoContainer extends React.Component {\r\n    state = {\r\n        todos: [],\r\n        show: false\r\n    }\r\n\r\n    /** Lifecycle methods */\r\n    /* Get 10 todo items from JSON placeholder when component mounts. */\r\n    componentDidMount() {\r\n        axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n            //Save items to todos state\r\n            .then(response => this.setState({ todos: response.data }));\r\n    }\r\n\r\n    /** Callback functions */\r\n    /* InputTodo form change handler */\r\n    handleChange = (id) => {\r\n        this.setState({\r\n            todos: this.state.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed; //inverting the value of todo.completed if conditional statement is true.\r\n                }\r\n                return todo;\r\n            }),\r\n            show: !this.state.show, //inverts the current value of the show property\r\n        });\r\n    };\r\n\r\n    /* Delete todo item */\r\n    delTodo = (id) => {\r\n        axios\r\n            .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n            .then(response =>\r\n                this.setState({\r\n                    //set state with all todos that do not equal the todo id being deleted                    \r\n                    todos: [\r\n                        ...this.state.todos.filter(todo => {\r\n                            return todo.id !== id\r\n                        }),\r\n                    ],\r\n                })\r\n            )\r\n    };\r\n\r\n    /* Add todo item */\r\n    addTodoItem = (title) => {\r\n        axios\r\n            .post(\"https://jsonplaceholder.typicode.com/todos\", { //send the following data to URL\r\n                title: title,\r\n                completed: false, //new todo entry will not be checked by default\r\n            })\r\n\r\n            .then(response => //promise that is resolved with the .then method. appends received data to todos list via the setState method.\r\n                this.setState({\r\n                    todos: [...this.state.todos, (response.data)],\r\n\r\n                })\r\n            )\r\n\r\n    }\r\n\r\n    render() {\r\n       \r\n        //Props object\r\n        const foo = {\r\n            todos: this.state.todos,\r\n            handleChange: this.handleChange,\r\n            deleteTodoProps: this.delTodo\r\n\r\n\r\n        };\r\n        return (\r\n            <div className=\"container\">\r\n                <Header headerSpan={this.state.show} />\r\n                <InputTodo addTodoItem={this.addTodoItem} />\r\n                <TodosList {...foo} />\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default TodoContainer","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n//component file\r\nimport TodoContainer from \"./components/TodoContainer\"\r\nimport \"./App.css\"\r\n\r\n\r\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}